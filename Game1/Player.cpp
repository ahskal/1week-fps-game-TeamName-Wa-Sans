#include "stdafx.h"

Player::Player()
{
	// 플레이어 본체
	player = Actor::Create();
	player->LoadFile("Player.xml");


	gun = new Gun();
	gun->GetGun()->rotation.x = 90.0f * ToRadian;


	shotGun = new ShotGun();
}

Player::~Player()
{
}

void Player::Init()
{
	speed = 3.0f;
	player->root->SetWorldPosY(0.1f);

	walkHandDir = 100.0f;
	walkLegDir = 100.0f;
}

void Player::RenderHierarchy()
{
	player->RenderHierarchy();
	gun->RenderHierarchy();
	shotGun->RenderHierarchy();
}

void Player::Update()
{
	ImGui::Text("gravity : %.2f", gravity);
	ImGui::Text("playerType : %d", (int)playerType);
	ImGui::Text("isGridCollide : %d", (int)isGridCollide);
	//ImGui::Text("walkDir : %.2f", walkDir);
	gun->GetGun()->SetWorldPos(player->Find("RightHandMesh")->GetWorldPos());



	player->Update();
	gun->Update();
	shotGun->Update();
}

void Player::Render()
{
	player->Render();
	gun->Render();
	shotGun->Render();
}

void Player::PlayerControl()
{
	// 가만히 있을때 
	if (playerType == PlayerType::None)
	{
		//팔의 각도를 원상복구하기
		player->Find("RightArmPoint")->rotation.x = 0.0f;
		player->Find("LeftArmPoint")->rotation.x = 0.0f;
		gun->GetGun()->rotation.x = 90.0f * ToRadian;		// 총이 손을 따라다니게끔

		player->Find("RightShoulderPoint")->rotation.z = 0.0f;
		player->Find("RightShoulderPoint")->rotation.x = 0.0f;
		player->Find("LeftShoulderPoint")->rotation.x = 0.0f;

		player->Find("LeftShoulderPoint")->rotation.y = 0.0f;
		player->Find("RightShoulderPoint")->rotation.y = 0.0f;
		walkHandDir = 100.0f;
		// 팔의 각도를 원상복구하기

		// 발의 각도 원상복구
		player->Find("RightKneePoint")->rotation.x = 0.0f;
		player->Find("LeftKneePoint")->rotation.x = 0.0f;

		player->Find("RightLegPoint")->rotation.x = 0.0f;
		player->Find("LeftLegPoint")->rotation.x = 0.0f;
		walkLegDir = 100.0f;
		// 발의 각도 원상복구


		if (INPUT->KeyPress('W') or INPUT->KeyPress('S') or INPUT->KeyPress('A') or INPUT->KeyPress('D'))
		{
			playerType = PlayerType::Walk;
		}
	}
	// 걸어다닐때 (무기x / 권총 / 샷건 / ... )
	else if (playerType == PlayerType::Walk)
	{
		speed = 1.0f;
		// 걷기 -> 뛰기(쉬프트 누르면서 S를 누르지 않았을 때)
		if (INPUT->KeyPress(VK_SHIFT) and not INPUT->KeyPress('S'))
		{
			playerType = PlayerType::Run;
			walkLegDir = 150.0f;
			walkHandDir = 150.0f;
			player->Find("LeftShoulderPoint")->rotation.y = 0.0f;
			player->Find("RightShoulderPoint")->rotation.y = 0.0f;

			player->Find("LeftShoulderPoint")->rotation.x = 0.0f;
			player->Find("RightShoulderPoint")->rotation.x = 0.0f;
			return;
		}

		// 플레이어 이동 구현 (총을 들고있는지 아닌지에 따라 모션 변경)
		{
			if (INPUT->KeyPress('W'))
			{
				player->MoveWorldPos(player->GetForward() * speed * DELTA);

				if (gunType == GunType::Gun)
				{
					player->Find("RightArmPoint")->rotation.x = 0.0f;
					player->Find("LeftArmPoint")->rotation.x = 0.0f;

					player->Find("LeftShoulderPoint")->rotation.x = -75.0f * ToRadian;
					player->Find("RightShoulderPoint")->rotation.x = -75.0f * ToRadian;

					player->Find("LeftShoulderPoint")->rotation.y = 25.0f * ToRadian;
					player->Find("RightShoulderPoint")->rotation.y = -25.0f * ToRadian;
					gun->GetGun()->rotation.x = 0.0f; // 총이 손을 따라다니게끔
				}
				else if (gunType == GunType::None)
				{
					// 팔꿈치 각도를 -40도 해서 팔이 접힌 상태로 만들기
					player->Find("RightArmPoint")->rotation.x = -40.0f * ToRadian;
					player->Find("LeftArmPoint")->rotation.x = -40.0f * ToRadian;
					gun->GetGun()->rotation.x = (90.0f - 40.0f) * ToRadian; // 총이 손을 따라다니게끔

					// 어깨 x각도를 -20 ~ 20도로 돌려서 걸을때 팔이 움직이게 보이기
					player->Find("RightShoulderPoint")->rotation.x += walkHandDir * ToRadian * DELTA;
					player->Find("LeftShoulderPoint")->rotation.x -= walkHandDir * ToRadian * DELTA;
					if (player->Find("RightShoulderPoint")->rotation.x < -20.0f * ToRadian or
						player->Find("RightShoulderPoint")->rotation.x > 20.0f * ToRadian)
					{
						walkHandDir = -walkHandDir;
					}
				}
				else if (gunType == GunType::ShotGun)
				{

				}

				// 무릎 각도를 25도 해서 팔이 접힌 상태로 만들기
				player->Find("RightKneePoint")->rotation.x = 25.0f * ToRadian;
				player->Find("LeftKneePoint")->rotation.x = 25.0f * ToRadian;

				// 발 x각도를 -20 ~ 20도로 돌려서 걸을때 발이 움직이게 보이기
				player->Find("RightLegPoint")->rotation.x -= walkLegDir * ToRadian * DELTA;
				player->Find("LeftLegPoint")->rotation.x += walkLegDir * ToRadian * DELTA;
				if (player->Find("RightLegPoint")->rotation.x < -20.0f * ToRadian or
					player->Find("RightLegPoint")->rotation.x > 20.0f * ToRadian)
				{
					walkLegDir = -walkLegDir;
				}
			}
			if (INPUT->KeyPress('S'))
			{
				player->MoveWorldPos(-player->GetForward() * speed * DELTA);

				if (gunType == GunType::Gun)
				{
					player->Find("LeftShoulderPoint")->rotation.x = -75.0f * ToRadian;
					player->Find("RightShoulderPoint")->rotation.x = -75.0f * ToRadian;

					player->Find("LeftShoulderPoint")->rotation.y = 25.0f * ToRadian;
					player->Find("RightShoulderPoint")->rotation.y = -25.0f * ToRadian;
					gun->GetGun()->rotation.x = 0.0f; // 총이 손을 따라다니게끔
				}
				else if (gunType == GunType::None)
				{
					// 팔꿈치 각도를 -40도 해서 팔이 접힌 상태로 만들기
					player->Find("RightArmPoint")->rotation.x = -40.0f * ToRadian;
					player->Find("LeftArmPoint")->rotation.x = -40.0f * ToRadian;
					gun->GetGun()->rotation.x = (90.0f - 40.0f) * ToRadian; // 총이 손을 따라다니게끔

					// 어깨 x각도를 -20 ~ 20도로 돌려서 걸을때 팔이 움직이게 보이기
					player->Find("LeftShoulderPoint")->rotation.x -= walkHandDir * ToRadian * DELTA;
					player->Find("RightShoulderPoint")->rotation.x += walkHandDir * ToRadian * DELTA;
					if (player->Find("LeftShoulderPoint")->rotation.x < -20.0f * ToRadian or
						player->Find("LeftShoulderPoint")->rotation.x > 20.0f * ToRadian)
					{
						walkHandDir = -walkHandDir;
					}
				}
				else if (gunType == GunType::ShotGun)
				{

				}


				// 무릎 각도를 25도 해서 팔이 접힌 상태로 만들기
				player->Find("RightKneePoint")->rotation.x = 25.0f * ToRadian;
				player->Find("LeftKneePoint")->rotation.x = 25.0f * ToRadian;

				// 발 x각도를 -20 ~ 20도로 돌려서 걸을때 발이 움직이게 보이기
				player->Find("RightLegPoint")->rotation.x += walkLegDir * ToRadian * DELTA;
				player->Find("LeftLegPoint")->rotation.x -= walkLegDir * ToRadian * DELTA;
				if (player->Find("RightLegPoint")->rotation.x < -20.0f * ToRadian or
					player->Find("RightLegPoint")->rotation.x > 20.0f * ToRadian)
				{
					walkLegDir = -walkLegDir;
				}
			}
			if (INPUT->KeyPress('A'))
			{
				player->MoveWorldPos(-player->GetRight() * speed * DELTA);
			}
			if (INPUT->KeyPress('D'))
			{
				player->MoveWorldPos(player->GetRight() * speed * DELTA);
			}
		}
		// 걷기 -> 서있기 (방향키를 누르지 않았을때)
		if (INPUT->KeyUp('W') or INPUT->KeyUp('S') or 
			INPUT->KeyUp('A') or INPUT->KeyUp('D'))
		{
			playerType = PlayerType::None;
		}
	}
	// 뛰어다닐때 (무기x / 권총 / 샷건 / ... )
	else if (playerType == PlayerType::Run)
	{
		speed = 2.0f;
		// 뛰기 -> 걷기 (쉬프트를 뗐을 때)
		if (INPUT->KeyUp(VK_SHIFT))
		{
			player->Find("RightArmPoint")->rotation.x = 0.0f;
			player->Find("LeftArmPoint")->rotation.x = 0.0f;
			gun->GetGun()->rotation.x = 90.0f * ToRadian;		// 총이 손을 따라다니게끔

			player->Find("RightShoulderPoint")->rotation.z = 0.0f;
			player->Find("RightShoulderPoint")->rotation.x = 0.0f;
			player->Find("LeftShoulderPoint")->rotation.x = 0.0f;

			player->Find("LeftShoulderPoint")->rotation.y = 0.0f;
			player->Find("RightShoulderPoint")->rotation.y = 0.0f;
			walkHandDir = 100.0f;

			playerType = PlayerType::Walk;
			walkLegDir = 100.0f;
			walkHandDir = 100.0f;

			return;
		}
		

		// 플레이어 이동 구현 (총을 들고있는지 아닌지에 따라 모션 변경)
		{
			if (INPUT->KeyPress('W'))
			{
				player->MoveWorldPos(player->GetForward() * speed * DELTA);

				if (gunType == GunType::Gun)
				{
					player->Find("LeftShoulderPoint")->rotation.y = 0.0f;
					player->Find("RightShoulderPoint")->rotation.y = 0.0f;
					player->Find("RightShoulderPoint")->rotation.z = 7.0f * ToRadian;

					player->Find("LeftArmPoint")->rotation.x = -40.0f * ToRadian;
					player->Find("LeftShoulderPoint")->rotation.x -= walkHandDir * ToRadian * DELTA;
					if (player->Find("LeftShoulderPoint")->rotation.x < -25.0f * ToRadian or
						player->Find("LeftShoulderPoint")->rotation.x > 25.0f * ToRadian)
					{
						walkHandDir = -walkHandDir;
					}

					player->Find("RightShoulderPoint")->rotation.x += walkHandDir * ToRadian * DELTA * 0.2f;



					player->Find("RightArmPoint")->rotation.x = 0.0f;
					gun->GetGun()->rotation.x = 90.0f * ToRadian;		// 총이 손을 따라다니게끔

				}
				else if (gunType == GunType::None)
				{
					// 팔꿈치 각도를 -40도 해서 팔이 접힌 상태로 만들기
					player->Find("RightArmPoint")->rotation.x = -40.0f * ToRadian;
					player->Find("LeftArmPoint")->rotation.x = -40.0f * ToRadian;
					gun->GetGun()->rotation.x = (90.0f - 40.0f) * ToRadian; // 총이 손을 따라다니게끔

					// 어깨 x각도를 -20 ~ 20도로 돌려서 걸을때 팔이 움직이게 보이기
					player->Find("RightShoulderPoint")->rotation.x += walkHandDir * ToRadian * DELTA;
					player->Find("LeftShoulderPoint")->rotation.x -= walkHandDir * ToRadian * DELTA;
					if (player->Find("RightShoulderPoint")->rotation.x < -25.0f * ToRadian or
						player->Find("RightShoulderPoint")->rotation.x > 25.0f * ToRadian)
					{
						walkHandDir = -walkHandDir;
					}
				}
				else if (gunType == GunType::ShotGun)
				{

				}




				// 무릎 각도를 25도 해서 팔이 접힌 상태로 만들기
				player->Find("RightKneePoint")->rotation.x = 30.0f * ToRadian;
				player->Find("LeftKneePoint")->rotation.x = 30.0f * ToRadian;

				// 발 x각도를 -20 ~ 20도로 돌려서 걸을때 발이 움직이게 보이기
				player->Find("RightLegPoint")->rotation.x -= walkLegDir * ToRadian * DELTA;
				player->Find("LeftLegPoint")->rotation.x += walkLegDir * ToRadian * DELTA;
				if (player->Find("RightLegPoint")->rotation.x < -25.0f * ToRadian or
					player->Find("RightLegPoint")->rotation.x > 25.0f * ToRadian)
				{
					walkLegDir = -walkLegDir;
				}
			}
			// 뛰기 -> 걷기 (쉬프르틀 누르고 있는 상태일때 S를 눌렀을 때)
			if (INPUT->KeyPress(VK_SHIFT) and INPUT->KeyPress('S'))
			{
				player->Find("RightArmPoint")->rotation.x = 0.0f;
				player->Find("LeftArmPoint")->rotation.x = 0.0f;
				gun->GetGun()->rotation.x = 90.0f * ToRadian;		// 총이 손을 따라다니게끔

				player->Find("RightShoulderPoint")->rotation.z = 0.0f;
				player->Find("RightShoulderPoint")->rotation.x = 0.0f;
				player->Find("LeftShoulderPoint")->rotation.x = 0.0f;

				player->Find("LeftShoulderPoint")->rotation.y = 0.0f;
				player->Find("RightShoulderPoint")->rotation.y = 0.0f;
				walkHandDir = 100.0f;

				playerType = PlayerType::Walk;
				walkLegDir = 100.0f;
				walkHandDir = 100.0f;
				return;
			}
			if (INPUT->KeyPress('A'))
			{
				player->MoveWorldPos(-player->GetRight() * speed * DELTA);
			}
			if (INPUT->KeyPress('D'))
			{
				player->MoveWorldPos(player->GetRight() * speed * DELTA);
			}
		}
		// 뛰기 -> 가만히 있기 (방향키를 누르지 않았을때)
		if (INPUT->KeyUp('W') or INPUT->KeyUp('S') or INPUT->KeyUp('A') or INPUT->KeyUp('D'))
		{
			playerType = PlayerType::None;
		}
	}

	/** 무기 상태값*/
	if (gunType == GunType::Gun)
	{
		//gun->GunControl();
	}
	else if (gunType == GunType::ShotGun)
	{
		shotGun->ShotGunControl();
	}
	/** 무기 상태값*/

	/** 점프*/
	if (isGridCollide)
	{
		gravity = 0.0f;
		jumpCount = 0; // 한번의 점프만 가능하게 하기위한
	}
	else
	{
		player->MoveWorldPos(player->GetUp()* gravity* DELTA);
		gravity -= 20.0f * DELTA;
	}

	if (INPUT->KeyDown(VK_SPACE) and jumpCount == 0)
	{
		gravity = 10.0f;
		player->MoveWorldPos(player->GetUp() * gravity * DELTA);
		player->Update();
		jumpCount++;
	}
	/** 점프*/
}

void Player::CollidePlayerToFloor(Grid* grid)
{
	// 여기서 매개변수 grid는 바닥이라고 생각하면 될듯
	// 바닥과 부딪혔을때 isGridCollide = true;
	if (player->Intersect(grid->Find("floor")))
		isGridCollide = true;
	else
		isGridCollide = false;
}
